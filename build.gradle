plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.5'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
    id 'com.ewerk.gradle.plugins.querydsl' version '1.0.10' // querydsl 플러그인 추가
}

group = 'dapp.mvp'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
    annotationProcessor 'org.projectlombok:lombok'
    implementation 'org.springframework.boot:spring-boot-starter-tomcat'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'

    // querydsl 디펜던시 추가
    implementation 'com.querydsl:querydsl-jpa:5.0.0'
    implementation 'com.querydsl:querydsl-apt:5.0.0'

    implementation group: 'net.minidev', name: 'json-smart', version: '2.4.8' //json library 추가

    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation group: 'io.jsonwebtoken', name: 'jjwt', version: '0.9.1' //JWT를 위한 라이브러리

    implementation 'io.springfox:springfox-boot-starter:3.0.0' //swagger 3.x
    implementation 'io.springfox:springfox-swagger-ui:3.0.0'

    implementation 'com.squareup.okhttp:okhttp:2.7.5' //okhttp
    implementation 'com.squareup.okio:okio:1.6.0'
}

// querydsl 적용
def querydslDir = '$buildDir/generated/querydsl'

querydsl {
    jpa = true
    querydslSourcesDir = querydslDir
}

sourceSets {
    main.java.srcDir querydslDir
}

configurations{
    querydsl.extendsFrom compileClasspath
}

compileQuerydsl {
    options.annotationProcessorPath = configurations.querydsl
}

//tasks.named('test') {
//    useJUnitPlatform()
//}
